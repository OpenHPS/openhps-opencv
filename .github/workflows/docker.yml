name: Docker

on:
  push:
    branches: [ master, dev ]
  workflow_dispatch:

jobs:
  docker:
    name: Build docker container
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu-version:
          - 18.04
        node-version:
          - 14
        opencv-version:
          - 3.4.15
          - 4.5.5
        opencv-contrib:
          - true
          - false
        runtime:
          - cpu
          - nvidia
    steps:
      - name: Image information
        run: |
          echo "OpenCV version: ${{ matrix.opencv-version }}"
          echo "NodeJS version: ${{ matrix.node-version }}"
      - uses: actions/checkout@v3
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            UBUNTU_VERSION=${{ matrix.ubuntu-version }}
            OPENCV_VERSION=${{ matrix.opencv-version }}
            NODEJS_MAJOR_VERSION=${{ matrix.node-version }}
            NUM_THREADS=${{ steps.cpu-cores.outputs.count }}
            WITH_CONTRIB=${{ matrix.opencv-contrib }}
          context: "./docker"
          file: "./docker/Dockerfile.${{ matrix.runtime }}"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/opencv-nodejs:ubuntu${{ matrix.ubuntu-version }}-node${{ matrix.node-version }}-opencv${{ matrix.opencv-version }}${{ (matrix.opencv-contrib && '-contrib') || '' }}-${{ matrix.node-version }}${{ (matrix.runtime == 'nvidia' && '-nvidia') || '' }}